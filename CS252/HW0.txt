Question 1:
My Computer Science account username is breber

Question 2:
The author mentions many reasons why open-source development can produce better software than closed-source development. One of the first major reasons he mentions is that oftentimes open-source projects start due to a developer wanting to fix a small (or not so small) issue that annoys them.  If a developer is annoyed by an issue in an existing piece of software, there are likely to be other users that have the same issue. So by wanting to fix something that annoys themselves, they are fixing a problem for others. And since the issue is affecting them, they are more likely to want to work on the project and make it work. With traditional closed-source development, the developers are likely working on a project just because that is what they are paid to do. They don't necessarily have a vested interest in the project because it might not be a project that they personally need.

In addition to the fact that developers work on these open-source projects out of interest, the fact that source code and documentation is available makes the rest of the development cycle easier. The potential scale of open-source software is one benefit. The more eyes you have on a project, the more likely someone will understand an issue and be able to come up with a fix. As the author stated, with enough eyes on a project, all bugs can become "shallow," meaning that someone ought to be able to know of a way to fix a certain bug. Getting the users involved in the whole software engineering process (design, implementation, debugging) also helps too. Being able to reuse projects and pieces of code from others prevents the need to "reinvent the wheel."
